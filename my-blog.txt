Ref - https://guides.rubyonrails.org#getting_started.html

We identified resource - Article

Operations on resource - Create Read Update Delete

cmd - rails gerenate scaffold Article title:string content:text

cmd - rails s

cmd - rake -T

Brwoser - http://localhost:3000/articles             ==> List of articles
Now this particular URL is mapped to controller(articles_controller.rb) and action (index)


WEB Browser ====> Web Server   ====> routes
                                      ||
                                      controller/action  <==> Models   <---> Database
                                       ||
                                       Views   ==> render web pages ==> Web browser                                   

Object Relational Mapping (ORM)
Programming Language      Database
class                     Tables
object                    Rows/Entires
properties                Columns

Conventions -> For every model class there will be a table mapped into database.
Table name will be always plural form of Model name. 

Article ===> articles
Post ======>  posts
Comment  =====> comments

Views convention

Since it's web application, request comes from web browser there has to be a web page rendered back to brwoser.

Every action in a controller with have a template to render/show.
app/views/<controller_name>/<action_name.html.erb>

Action View Helpers - http://api.rubyonrails.org/classes/ActionView/Helpers/UrlHelper.html


Brwoser - http://localhost:3000/articles/new         ==> New form
http://api.rubyonrails.org/classes/ActionView/Helpers/FormHelper.html

Task - Add more fields to capture article information. Add reference url, Radio option that checks for safe for work (.) Yes or ().

Tips: 
Create migration files, rails generate migration <migration_name>
Add columns using the ActiveRecord migration API (add_column ...)
Modify views uing ActionView helpers
Make the reqiured changes in models, controllers/actions



Brwoser - http://localhost:3000/articles/1           ==> Show article

Brwoser - http://localhost:3000/articles/1/edit      ==> Edit article with id-1

